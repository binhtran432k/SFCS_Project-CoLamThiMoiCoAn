<h1 class="hideDesktop">Bảng điều khiển</h1>
<div id="dashboardWrapper">
    <div id="dashboardMenu" class="custom-select"></div>
    <div id="dashboardContent"></div>
</div>
<%
var opt = 'information';
var fullDashboardOption = {
    information: 'Thông tin tài khoản',
    report: 'Báo cáo hệ thống',
    reportHistory: 'Lịch sử báo cáo',
    notification: 'Thông báo',
    cart: 'Giỏ hàng',
    cartHistory: 'Lịch sử đặt hàng',
    orderQueue: 'Hàng chờ thực hiện đơn đặt hàng',
    orderProccess: 'Đơn đặt hàng đang thực hiện',
    foodMenu: 'Thực đơn cửa hàng',
    staffManager: 'Quản lý nhân viên',
    foodManager: 'Quản lý sản phẩm',
    sale: 'Doanh thu',
    stallManager: 'Quản lý cửa hàng',
    reportManager: 'Quản lý báo cáo',
    orderQueue2: 'Hàng chờ giao sản phẩm'
}
var dashboardOption = ['information'];
%>
<%- include('./information') %>
<% if (userData.UserType === 0) { %>
<%- include('./cart') %>
<%
    if (option === 'cart') {
        opt = 'cart';
    }
    dashboardOption.push('cart', 'cartHistory');
%>
<%
}
else if (userData.UserType === 1) {
%>
<%- include('./order-queue') %>
<%
    if (option === 'order-queue') {
        opt = 'orderQueue';
    }
    dashboardOption.push('orderQueue', 'orderProccess', 'foodMenu');
%>
<% } %>
<%
if (userData.UserType !== 3) {
    dashboardOption.push('report', 'reportHistory');
}
dashboardOption.push('notification');
%>
<script>
    function customSelect(className) {
        function selectedItem(e) {
            /*when an item is clicked, update the original select box,
            and the selected item:*/
            var y, i, k, s, h, sl, yl;
            s = this.parentNode.parentNode.getElementsByTagName("select")[0];
            sl = s.length;
            h = this.parentNode.previousSibling;
            var oldSelIndex = s.selectedIndex;
            for (i = 0; i < sl; i++) {
                if (s.options[i].innerHTML == this.innerHTML) {
                    s.selectedIndex = i;
                    if (oldSelIndex != i) {
                        if (document.createEvent) {
                            var event = document.createEvent('HTMLEvents');
                            event.initEvent('change', true, false);
                            s.dispatchEvent(event);
                        } else {
                            s.fireEvent('onchange');
                        }
                    }
                    h.innerHTML = this.innerHTML;
                    y = this.parentNode.getElementsByClassName("same-as-selected");
                    yl = y.length;
                    for (k = 0; k < yl; k++) {
                        y[k].removeAttribute("class");
                    }
                    this.setAttribute("class", "same-as-selected");
                    break;
                }
            }
            h.click();
        }
        function closeAllSelect(elmnt) {
            /*a function that will close all select boxes in the document,
            except the current select box:*/
            var x, y, i, xl, yl, arrNo = [];
            x = document.getElementsByClassName("select-items");
            y = document.getElementsByClassName("select-selected");
            xl = x.length;
            yl = y.length;
            for (i = 0; i < yl; i++) {
                if (elmnt == y[i]) {
                    arrNo.push(i)
                } else {
                    y[i].classList.remove("select-arrow-active");
                }
            }
            for (i = 0; i < xl; i++) {
                if (arrNo.indexOf(i)) {
                    x[i].classList.add("select-hide");
                }
            }
        }
        var x = document.getElementsByClassName(className);
        var l = x.length;
        for (i = 0; i < l; i++) {
            var selElmnt = x[i].getElementsByTagName("select")[0];
            var ll = selElmnt.length;
            /*for each element, create a new DIV that will act as the selected item:*/
            var a = document.createElement("DIV");
            a.setAttribute("class", "select-selected");
            a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
            x[i].appendChild(a);
            /*for each element, create a new DIV that will contain the option list:*/
            var b = document.createElement("DIV");
            b.setAttribute("class", "select-items select-hide");
            for (j = 0; j < ll; j++) {
                /*for each option in the original select element,
                create a new DIV that will act as an option item:*/
                var c = document.createElement("DIV");
                c.innerHTML = selElmnt.options[j].innerHTML;
                if (selElmnt.selectedIndex === j) {
                    c.setAttribute("class", "same-as-selected");
                }
                c.addEventListener("click", selectedItem);
                b.appendChild(c);
            }
            x[i].appendChild(b);
            a.addEventListener("click", function (e) {
                /*when the select box is clicked, close any other select boxes,
                and open/close the current select box:*/
                e.stopPropagation();
                closeAllSelect(this);
                this.nextSibling.classList.toggle("select-hide");
                this.classList.toggle("select-arrow-active");
            });
        }
        /*if the user clicks anywhere outside the select box,
        then close all select boxes:*/
        document.addEventListener("click", closeAllSelect);
    }
    function dashboardHandling(option) {
        switch (option) {
            case 'cart':
                viewCartPage('#dashboardContent');
                break;
            case 'orderQueue':
                viewOrderQueue('#dashboardContent');
                break;
            case 'information':
                viewInformation('#dashboardContent');
                break;
            default:
                $('#dashboardContent').html('');
        }
    }
    $(document).ready(function () {
        $('#dashboardMenu').html(`
        <select>
        <% dashboardOption.forEach(function(element){ %>
            <option value="<%= element %>"<% if (element === opt) { %> selected="selected"<%} %>><%= fullDashboardOption[element] %></option>
        <% }); %>
        </select>
        `);
        customSelect('custom-select');
        dashboardHandling($('#dashboardMenu select').val());
        $('#dashboardMenu select').change(function () {
            dashboardHandling($(this).val());
        });
    });
</script>